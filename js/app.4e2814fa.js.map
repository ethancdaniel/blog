{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?0db5","webpack:///./src/App.vue?eabf","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/ethancdaniel/blog/ethancdaniel.blog.blog/module/rest.js","webpack:///./src/store/generated/ethancdaniel/blog/ethancdaniel.blog.blog/module/types/blog/post.js","webpack:///./src/store/generated/ethancdaniel/blog/ethancdaniel.blog.blog/module/index.js","webpack:///./src/store/generated/ethancdaniel/blog/ethancdaniel.blog.blog/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?4e3d","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?79a6","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/App.vue?deda","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","PublicKey","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","String","fromCharCode","join","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","string","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","uint64","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","time","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","description","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","content","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","types","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgVerifyInvariant","initTxClient","vuexGetters","getDefaultState","_Structure","_Subscriptions","Set","namespaced","mutations","RESET_STATE","assign","QUERY","query","JSON","stringify","SUBSCRIBE","subscription","add","UNSUBSCRIBE","delete","getters","getTypeStructure","fields","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","sendMsgVerifyInvariant","msg","SpVuexError","getStructure","template","structure","field","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","request","body","secure","path","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryAllBalances","method","queryBalance","denom","queryDenomsMetadata","queryDenomMetadata","queryParams","queryTotalSupply","querySupplyOf","baseCoin","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgMultiSend","msgSend","queryClient","baseBalance","Balance","initQueryClient","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getParams","getDenomMetadata","getDenomsMetadata","QueryBalance","options","subscribe","all","QueryAllBalances","pagination","nextKey","next_values","prop","QueryTotalSupply","QuerySupplyOf","QueryParams","QueryDenomMetadata","QueryDenomsMetadata","sendMsgMultiSend","sendMsgSend","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgFundCommunityPool","msgWithdrawValidatorCommission","msgWithdrawDelegatorReward","msgSetWithdrawAddress","V1State","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgFundCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgWithdrawDelegatorReward","sendMsgSetWithdrawAddress","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenAck","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenTry","msgConnectionOpenAck","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenTry","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","client_id","QueryConnectionClientState","QueryConnectionConsensusState","revision_number","revision_height","sendMsgConnectionOpenAck","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenTry","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","V1Order","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenInit","MsgTimeout","MsgChannelOpenAck","MsgChannelCloseInit","MsgChannelCloseConfirm","MsgChannelOpenConfirm","MsgChannelOpenTry","MsgRecvPacket","MsgTimeoutOnClose","MsgAcknowledgement","msgChannelOpenInit","msgTimeout","msgChannelOpenAck","msgChannelCloseInit","msgChannelCloseConfirm","msgChannelOpenConfirm","msgChannelOpenTry","msgRecvPacket","msgTimeoutOnClose","msgAcknowledgement","V1Beta1BondStatus","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenInit","sendMsgTimeout","sendMsgChannelOpenAck","sendMsgChannelCloseInit","sendMsgChannelCloseConfirm","sendMsgChannelOpenConfirm","sendMsgChannelOpenTry","sendMsgRecvPacket","sendMsgTimeoutOnClose","sendMsgAcknowledgement","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","validatorAddr","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgDelegate","msgEditValidator","msgCreateValidator","msgUndelegate","msgBeginRedelegate","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgDelegate","sendMsgEditValidator","sendMsgCreateValidator","sendMsgUndelegate","sendMsgBeginRedelegate","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","MsgCreateVestingAccount","msgCreateVestingAccount","sendMsgCreateVestingAccount","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","MsgUnjail","msgUnjail","SigningInfo","SigningInfos","ValidatorSigningInfo","ValidatorMissedBlocks","MissedBlock","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpgradeClient","msgUpdateClient","msgCreateClient","msgSubmitMisbehaviour","V1Beta1ProposalStatus","V1Beta1VoteOption","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","QueryClientStates","QueryConsensusState","QueryConsensusStates","QueryClientParams","sendMsgUpgradeClient","sendMsgUpdateClient","sendMsgCreateClient","sendMsgSubmitMisbehaviour","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","MsgSubmitProposal","MsgDeposit","MsgVote","msgSubmitProposal","msgDeposit","msgVote","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgSubmitProposal","sendMsgDeposit","sendMsgVote","queryPostAll","queryPost","id","basePost","creator","title","Post","baseMsgCreatePost","MsgCreatePost","msgCreatePost","PostAll","getPost","getPostAll","QueryPost","QueryPostAll","sendMsgCreatePost","CosmosCosmosSdkCosmosCrisisV1Beta1","load","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkIbcCoreConnectionV1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkCosmosGovV1Beta1","EthancdanielBlogEthancdanielBlogBlog","mod","fullns","store","fullnsLevels","split","registerModule","pop","mutation","root","values","generated","moduleInit","transfers","starport","blocks","env","createStore","routerHistory","createWebHistory","routes","component","Index","Types","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.4e2814fa.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseMsgCreateClient = { signer: \"\" };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpdateClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpgradeClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviour = { clientId: \"\", signer: \"\" };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"CreateClient\", data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpdateClient\", data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpgradeClient\", data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"SubmitMisbehaviour\", data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { Header } from \"../../tendermint/types/types\";\nimport { ProofOps } from \"../../tendermint/crypto/proof\";\nimport { EvidenceParams, ValidatorParams, VersionParams, } from \"../../tendermint/types/params\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.abci\";\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NEW\":\n            return CheckTxType.NEW;\n        case 1:\n        case \"RECHECK\":\n            return CheckTxType.RECHECK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return \"NEW\";\n        case CheckTxType.RECHECK:\n            return \"RECHECK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case \"DUPLICATE_VOTE\":\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case \"LIGHT_CLIENT_ATTACK\":\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return \"UNKNOWN\";\n        case EvidenceType.DUPLICATE_VOTE:\n            return \"DUPLICATE_VOTE\";\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return \"LIGHT_CLIENT_ATTACK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case \"REJECT\":\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case \"REJECT_FORMAT\":\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case \"REJECT_SENDER\":\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseOfferSnapshot_Result.ABORT:\n            return \"ABORT\";\n        case ResponseOfferSnapshot_Result.REJECT:\n            return \"REJECT\";\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return \"REJECT_FORMAT\";\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return \"REJECT_SENDER\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case \"RETRY\":\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case \"RETRY_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case \"REJECT_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return \"ABORT\";\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return \"RETRY\";\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return \"RETRY_SNAPSHOT\";\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return \"REJECT_SNAPSHOT\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseRequestEcho = { message: \"\" };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n};\nconst baseRequestInfo = { version: \"\", blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== \"\") {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestSetOption = { key: \"\", value: \"\" };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestInitChain = { chainId: \"\", initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestQuery = { path: \"\", height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== \"\") {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: \"\" };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseResponseException = { error: \"\" };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== \"\") {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEcho = { message: \"\" };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n};\nconst baseResponseInfo = {\n    data: \"\",\n    version: \"\",\n    appVersion: 0,\n    lastBlockHeight: 0,\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== \"\") {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseSetOption = { code: 0, log: \"\", info: \"\" };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    index: 0,\n    height: 0,\n    codespace: \"\",\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: \"\",\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => e ? VoteInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEvent = { type: \"\" };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Echo\", data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Flush\", data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Info\", data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"SetOption\", data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"DeliverTx\", data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"CheckTx\", data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Query\", data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Commit\", data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"InitChain\", data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"BeginBlock\", data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"EndBlock\", data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ListSnapshots\", data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"OfferSnapshot\", data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"LoadSnapshotChunk\", data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ApplySnapshotChunk\", data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../google/protobuf/duration\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorParams = { pubKeyTypes: \"\" };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined &&\n            (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: \"\" };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== \"\") {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { BaseAccount } from \"../../../cosmos/auth/v1beta1/auth\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case 4:\n        case \"STATE_CLOSED\":\n            return State.STATE_CLOSED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        case State.STATE_CLOSED:\n            return \"STATE_CLOSED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"ORDER_NONE_UNSPECIFIED\":\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case \"ORDER_UNORDERED\":\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case \"ORDER_ORDERED\":\n            return Order.ORDER_ORDERED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return \"ORDER_NONE_UNSPECIFIED\";\n        case Order.ORDER_UNORDERED:\n            return \"ORDER_UNORDERED\";\n        case Order.ORDER_ORDERED:\n            return \"ORDER_ORDERED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n    portId: \"\",\n    channelId: \"\",\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== \"\") {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { portId: \"\", channelId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    destinationPort: \"\",\n    destinationChannel: \"\",\n    timeoutTimestamp: 0,\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== \"\") {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== \"\") {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== \"\") {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst basePacketState = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Header } from \"../../../tendermint/types/types\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BOND_STATUS_UNSPECIFIED\":\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case \"BOND_STATUS_UNBONDED\":\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case \"BOND_STATUS_UNBONDING\":\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case \"BOND_STATUS_BONDED\":\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return \"BOND_STATUS_UNSPECIFIED\";\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return \"BOND_STATUS_UNBONDED\";\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return \"BOND_STATUS_UNBONDING\";\n        case BondStatus.BOND_STATUS_BONDED:\n            return \"BOND_STATUS_BONDED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommissionRates = {\n    rate: \"\",\n    maxRate: \"\",\n    maxChangeRate: \"\",\n};\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== \"\") {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== \"\") {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== \"\") {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseDescription = {\n    moniker: \"\",\n    identity: \"\",\n    website: \"\",\n    securityContact: \"\",\n    details: \"\",\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== \"\") {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== \"\") {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== \"\") {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== \"\") {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== \"\") {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidator = {\n    operatorAddress: \"\",\n    jailed: false,\n    status: 0,\n    tokens: \"\",\n    delegatorShares: \"\",\n    unbondingHeight: 0,\n    minSelfDelegation: \"\",\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== \"\") {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== \"\") {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== \"\") {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseValAddresses = { addresses: \"\" };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseDVPair = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDVVTriplet = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n    shares: \"\",\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== \"\") {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    balance: \"\",\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    sharesDst: \"\",\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== \"\") {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegation = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: \"\",\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== \"\") {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance\n                ? Coin.toJSON(message.balance)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntryResponse = { balance: \"\" };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePool = { notBondedTokens: \"\", bondedTokens: \"\" };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== \"\") {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== \"\") {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n  <SpSidebar\n\t\t\t\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\t\t\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t\t\t\t>\n\t\t\t\t\t<template v-slot:default>\n\t\t\t\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t\t\t\t<SpLinkIcon href=\"https://github.com/tendermint/starport\" target=\"_blank\" text=\"Documentation\" icon=\"Docs\" />\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-slot:footer>\n\t\t\t\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t\t\t\t</template>\n\t\t\t\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n  name: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=21017ee9\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=5695b462\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.crisis.v1beta1\";\nconst baseMsgVerifyInvariant = {\n    sender: \"\",\n    invariantModuleName: \"\",\n    invariantRoute: \"\",\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== \"\") {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== \"\") {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.crisis.v1beta1.Msg\", \"VerifyInvariant\", data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseSendEnabled = { denom: \"\", enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n};\nconst baseInput = { address: \"\" };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseOutput = { address: \"\" };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDenomUnit = { denom: \"\", exponent: 0, aliases: \"\" };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMetadata = { description: \"\", base: \"\", display: \"\" };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== \"\") {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== \"\") {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== \"\") {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Input, Output } from \"../../../cosmos/bank/v1beta1/bank\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseMsgSend = { fromAddress: \"\", toAddress: \"\" };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"Send\", data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"MultiSend\", data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from \"../../../cosmos/bank/v1beta1/bank\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBalance = { address: \"\" };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, query)).data : (await (await initQueryClient(rootGetters)).queryAllBalances(key.address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTotalSupply(query)).data : (await (await initQueryClient(rootGetters)).queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom, query)).data : (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomsMetadata(query)).data : (await (await initQueryClient(rootGetters)).queryDenomsMetadata()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: \"\" };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgFundCommunityPool = { depositor: \"\" };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"SetWithdrawAddress\", data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawDelegatorReward\", data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawValidatorCommission\", data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"FundCommunityPool\", data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryCommunityPool(query)).data : (await (await initQueryClient(rootGetters)).queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnections(query)).data : (await (await initQueryClient(rootGetters)).queryConnections()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash, query)).data : (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllEvidence(query)).data : (await (await initQueryClient(rootGetters)).queryAllEvidence()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannels(query)).data : (await (await initQueryClient(rootGetters)).queryChannels()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/staking.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport { Description, CommissionRates, } from \"../../../cosmos/staking/v1beta1/staking\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseMsgCreateValidator = {\n    minSelfDelegation: \"\",\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgEditValidator = {\n    validatorAddress: \"\",\n    commissionRate: \"\",\n    minSelfDelegation: \"\",\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== \"\") {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDelegate = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegate = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"CreateValidator\", data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"EditValidator\", data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Delegate\", data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"BeginRedelegate\", data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Undelegate\", data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidators(query)).data : (await (await initQueryClient(rootGetters)).queryValidators()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height, query)).data : (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool(query)).data : (await (await initQueryClient(rootGetters)).queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/vesting.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/slashing.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseMsgUnjail = { validatorAddr: \"\" };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.slashing.v1beta1.Msg\", \"Unjail\", data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address, query)).data : (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfos(query)).data : (await (await initQueryClient(rootGetters)).querySigningInfos()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash, query)).data : (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTraces(query)).data : (await (await initQueryClient(rootGetters)).queryDenomTraces()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientState(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientStates(query)).data : (await (await initQueryClient(rootGetters)).queryClientStates()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientParams(query)).data : (await (await initQueryClient(rootGetters)).queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/gov.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposals(query)).data : (await (await initQueryClient(rootGetters)).queryProposals()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter, query)).data : (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(key.params_type, query)).data : (await (await initQueryClient(rootGetters)).queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor, query)).data : (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title blog/query.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPostAll\n         * @request GET:/ethancdaniel/blog/blog/post\n         */\n        this.queryPostAll = (query, params = {}) => this.request({\n            path: `/ethancdaniel/blog/blog/post`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPost\n         * @summary this line is used by starport scaffolding # 2\n         * @request GET:/ethancdaniel/blog/blog/post/{id}\n         */\n        this.queryPost = (id, params = {}) => this.request({\n            path: `/ethancdaniel/blog/blog/post/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ethancdaniel.blog.blog\";\nconst basePost = { creator: \"\", id: \"\", title: \"\", body: \"\" };\nexport const Post = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== \"\") {\n            writer.uint32(18).string(message.id);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(26).string(message.title);\n        }\n        if (message.body !== \"\") {\n            writer.uint32(34).string(message.body);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = reader.string();\n                    break;\n                case 3:\n                    message.title = reader.string();\n                    break;\n                case 4:\n                    message.body = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = String(object.body);\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.title !== undefined && (obj.title = message.title);\n        message.body !== undefined && (obj.body = message.body);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = object.body;\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreatePost = { creator: \"\", title: \"\", body: \"\" };\nexport const MsgCreatePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(18).string(message.title);\n        }\n        if (message.body !== \"\") {\n            writer.uint32(26).string(message.body);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.title = reader.string();\n                    break;\n                case 3:\n                    message.body = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = String(object.body);\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.title !== undefined && (obj.title = message.title);\n        message.body !== undefined && (obj.body = message.body);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.body !== undefined && object.body !== null) {\n            message.body = object.body;\n        }\n        else {\n            message.body = \"\";\n        }\n        return message;\n    },\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreatePost } from \"./types/blog/post\";\nconst types = [\n    [\"/ethancdaniel.blog.blog.MsgCreatePost\", MsgCreatePost],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgCreatePost: (data) => ({ typeUrl: \"/ethancdaniel.blog.blog.MsgCreatePost\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Post } from \"./module/types/blog/post\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Post: {},\n        PostAll: {},\n        _Structure: {\n            Post: getStructure(Post.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getPost: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Post[JSON.stringify(params)] ?? {};\n        },\n        getPostAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PostAll[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryPost({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPost(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryPost(key.id)).data;\n                commit('QUERY', { query: 'Post', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPost', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPost']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPost', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPostAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPostAll(query)).data : (await (await initQueryClient(rootGetters)).queryPostAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPostAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PostAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPostAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPostAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPostAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgCreatePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgCreatePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport EthancdanielBlogEthancdanielBlogBlog from './ethancdaniel/blog/ethancdaniel.blog.blog';\nexport default {\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    EthancdanielBlogEthancdanielBlogBlog: load(EthancdanielBlogEthancdanielBlogBlog, 'ethancdaniel.blog.blog'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        const fullnsLevels = fullns.split('/');\n        for (let i = 1; i < fullnsLevels.length; i++) {\n            let ns = fullnsLevels.slice(0, i);\n            if (!store.hasModule(ns)) {\n                store.registerModule(ns, { namespaced: true });\n            }\n        }\n        if (store.hasModule(fullnsLevels)) {\n            throw new Error('Duplicate module name detected: ' + fullnsLevels.pop());\n        }\n        else {\n            store.registerModule(fullnsLevels, mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, starport, blocks, wallet,transfers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tstarport(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {},\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=e30ba36a\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n\n","import { render } from \"./Types.vue?vue&type=template&id=789c7189\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedChannel, PacketState, } from \"../../../../ibc/core/channel/v1/channel\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n};\nconst basePacketSequence = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, ValidatorSigningInfo, } from \"../../../cosmos/slashing/v1beta1/slashing\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSigningInfo = { address: \"\" };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorMissedBlocks = { address: \"\" };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { MerklePrefix } from \"../../../../ibc/core/commitment/v1/commitment\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseConnectionEnd = { clientId: \"\", state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseIdentifiedConnection = {\n    id: \"\",\n    clientId: \"\",\n    state: 0,\n    delayPeriod: 0,\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { clientId: \"\", connectionId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== \"\") {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientPaths = { paths: \"\" };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConnectionPaths = { clientId: \"\", paths: \"\" };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersion = { identifier: \"\", features: \"\" };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== \"\") {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin, Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseParams = {\n    communityTax: \"\",\n    baseProposerReward: \"\",\n    bonusProposerReward: \"\",\n    withdrawAddrEnabled: false,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== \"\") {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== \"\") {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== \"\") {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: \"\" };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== \"\") {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposal = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: \"\",\n    height: 0,\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== \"\") {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseDelegationDelegatorReward = { validatorAddress: \"\" };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n    amount: \"\",\n    deposit: \"\",\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== \"\") {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseValidatorSigningInfo = {\n    address: \"\",\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0,\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined &&\n            (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined &&\n            (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseMsgSubmitEvidence = { submitter: \"\" };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== \"\") {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.evidence.v1beta1.Msg\", \"SubmitEvidence\", data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool, } from \"../../../cosmos/distribution/v1beta1/distribution\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: \"\",\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: \"\",\n    period: 0,\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: \"\",\n    height: 0,\n    period: 0,\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n};\nconst baseGenesisState = { previousProposer: \"\" };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== \"\") {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseMsgCreateVestingAccount = {\n    fromAddress: \"\",\n    toAddress: \"\",\n    endTime: 0,\n    delayed: false,\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.vesting.v1beta1.Msg\", \"CreateVestingAccount\", data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Channel, Packet } from \"../../../../ibc/core/channel/v1/channel\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseMsgChannelOpenInit = { portId: \"\", signer: \"\" };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenTry = {\n    portId: \"\",\n    previousChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== \"\") {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenAck = {\n    portId: \"\",\n    channelId: \"\",\n    counterpartyChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== \"\") {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseInit = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgRecvPacket = { signer: \"\" };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgAcknowledgement = { signer: \"\" };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenInit\", data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenTry\", data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenAck\", data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenConfirm\", data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseInit\", data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseConfirm\", data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"RecvPacket\", data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Timeout\", data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"TimeoutOnClose\", data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Acknowledgement\", data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.auth.v1beta1\";\nconst baseBaseAccount = { address: \"\", accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nconst baseModuleAccount = { name: \"\", permissions: \"\" };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"VOTE_OPTION_UNSPECIFIED\":\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case \"VOTE_OPTION_YES\":\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case \"VOTE_OPTION_ABSTAIN\":\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case \"VOTE_OPTION_NO\":\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case \"VOTE_OPTION_NO_WITH_VETO\":\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return \"VOTE_OPTION_UNSPECIFIED\";\n        case VoteOption.VOTE_OPTION_YES:\n            return \"VOTE_OPTION_YES\";\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return \"VOTE_OPTION_ABSTAIN\";\n        case VoteOption.VOTE_OPTION_NO:\n            return \"VOTE_OPTION_NO\";\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return \"VOTE_OPTION_NO_WITH_VETO\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"PROPOSAL_STATUS_UNSPECIFIED\":\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case \"PROPOSAL_STATUS_DEPOSIT_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case \"PROPOSAL_STATUS_VOTING_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case \"PROPOSAL_STATUS_PASSED\":\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case \"PROPOSAL_STATUS_REJECTED\":\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case \"PROPOSAL_STATUS_FAILED\":\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return \"PROPOSAL_STATUS_UNSPECIFIED\";\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return \"PROPOSAL_STATUS_VOTING_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return \"PROPOSAL_STATUS_PASSED\";\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return \"PROPOSAL_STATUS_REJECTED\";\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return \"PROPOSAL_STATUS_FAILED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseTextProposal = { title: \"\", description: \"\" };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseDeposit = { proposalId: 0, depositor: \"\" };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyResult = {\n    yes: \"\",\n    abstain: \"\",\n    no: \"\",\n    noWithVeto: \"\",\n};\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== \"\") {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== \"\") {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== \"\") {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== \"\") {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n};\nconst baseVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseFungibleTokenPacketData = {\n    denom: \"\",\n    amount: 0,\n    sender: \"\",\n    receiver: \"\",\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n};\nconst baseDenomTrace = { path: \"\", baseDenom: \"\" };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== \"\") {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== \"\") {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined &&\n            (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedClientState, ClientConsensusStates, Params, } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0,\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseIdentifiedGenesisMetadata = { clientId: \"\" };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Counterparty, Version, } from \"../../../../ibc/core/connection/v1/connection\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\nconst baseMsgConnectionOpenInit = {\n    clientId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== \"\") {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    signer: \"\",\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== \"\") {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: \"\", signer: \"\" };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation, } from \"../../../cosmos/staking/v1beta1/staking\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n};\nconst baseLastValidatorPower = { address: \"\", power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from \"../../../../confio/proofs\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.core.commitment.v1\";\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePath = { keyPath: \"\" };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ics23\";\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_HASH\":\n            return HashOp.NO_HASH;\n        case 1:\n        case \"SHA256\":\n            return HashOp.SHA256;\n        case 2:\n        case \"SHA512\":\n            return HashOp.SHA512;\n        case 3:\n        case \"KECCAK\":\n            return HashOp.KECCAK;\n        case 4:\n        case \"RIPEMD160\":\n            return HashOp.RIPEMD160;\n        case 5:\n        case \"BITCOIN\":\n            return HashOp.BITCOIN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return \"NO_HASH\";\n        case HashOp.SHA256:\n            return \"SHA256\";\n        case HashOp.SHA512:\n            return \"SHA512\";\n        case HashOp.KECCAK:\n            return \"KECCAK\";\n        case HashOp.RIPEMD160:\n            return \"RIPEMD160\";\n        case HashOp.BITCOIN:\n            return \"BITCOIN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_PREFIX\":\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case \"VAR_PROTO\":\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case \"VAR_RLP\":\n            return LengthOp.VAR_RLP;\n        case 3:\n        case \"FIXED32_BIG\":\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case \"FIXED32_LITTLE\":\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case \"FIXED64_BIG\":\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case \"FIXED64_LITTLE\":\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case \"REQUIRE_32_BYTES\":\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case \"REQUIRE_64_BYTES\":\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return \"NO_PREFIX\";\n        case LengthOp.VAR_PROTO:\n            return \"VAR_PROTO\";\n        case LengthOp.VAR_RLP:\n            return \"VAR_RLP\";\n        case LengthOp.FIXED32_BIG:\n            return \"FIXED32_BIG\";\n        case LengthOp.FIXED32_LITTLE:\n            return \"FIXED32_LITTLE\";\n        case LengthOp.FIXED64_BIG:\n            return \"FIXED64_BIG\";\n        case LengthOp.FIXED64_LITTLE:\n            return \"FIXED64_LITTLE\";\n        case LengthOp.REQUIRE_32_BYTES:\n            return \"REQUIRE_32_BYTES\";\n        case LengthOp.REQUIRE_64_BYTES:\n            return \"REQUIRE_64_BYTES\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch\n                ? BatchProof.toJSON(message.batch)\n                : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0,\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0,\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Event } from \"../../../../tendermint/abci/types\";\nexport const protobufPackage = \"cosmos.base.abci.v1beta1\";\nconst baseTxResponse = {\n    height: 0,\n    txhash: \"\",\n    codespace: \"\",\n    code: 0,\n    data: \"\",\n    rawLog: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: \"\",\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== \"\") {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== \"\") {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== \"\") {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== \"\") {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== \"\") {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: \"\" };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseStringEvent = { type: \"\" };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseAttribute = { key: \"\", value: \"\" };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n};\nconst baseResult = { log: \"\" };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgData = { msgType: \"\" };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== \"\") {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0,\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../../cosmos/base/v1beta1/coin\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseMsgTransfer = {\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    sender: \"\",\n    receiver: \"\",\n    timeoutTimestamp: 0,\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== \"\") {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Msg\", \"Transfer\", data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON, } from \"../../../cosmos/gov/v1beta1/gov\";\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\nconst baseMsgSubmitProposal = { proposer: \"\" };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: \"\" };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"SubmitProposal\", data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Vote\", data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Deposit\", data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n"],"sourceRoot":""}